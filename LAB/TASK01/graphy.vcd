$date
	Sun May 18 19:23:08 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 8 ! Z [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 1 $ S $end
$scope module uut $end
$var wire 8 % A [7:0] $end
$var wire 8 & B [7:0] $end
$var wire 1 $ S $end
$var wire 8 ' Z [7:0] $end
$var wire 8 ( D [7:0] $end
$var wire 8 ) C [7:0] $end
$scope module and_u $end
$var wire 8 * A [7:0] $end
$var wire 8 + B [7:0] $end
$var reg 8 , C [7:0] $end
$upscope $end
$scope module mux_u $end
$var wire 8 - C [7:0] $end
$var wire 1 $ S $end
$var wire 8 . D [7:0] $end
$var reg 8 / Z [7:0] $end
$upscope $end
$scope module or_u $end
$var wire 8 0 A [7:0] $end
$var wire 8 1 B [7:0] $end
$var reg 8 2 D [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b110110 2
b110110 1
b10 0
b10 /
b110110 .
b10 -
b10 ,
b110110 +
b10 *
b10 )
b110110 (
b10 '
b110110 &
b10 %
0$
b110110 #
b10 "
b10 !
$end
#5
b111 (
b111 .
b111 2
b111 #
b111 &
b111 +
b111 1
#15
b1110 !
b1110 '
b1110 /
b1110 (
b1110 .
b1110 2
1$
b1110 #
b1110 &
b1110 +
b1110 1
#35
b10 !
b10 '
b10 /
0$
#60
b1010 !
b1010 '
b1010 /
b1010 )
b1010 ,
b1010 -
b11111 (
b11111 .
b11111 2
b11011 "
b11011 %
b11011 *
b11011 0
#65
